# # Copyright The OpenTelemetry Authors
# # SPDX-License-Identifier: Apache-2.0

global:
  evaluation_interval: 30s
  scrape_interval: 5s
storage:
  tsdb:
    out_of_order_time_window: 30m
scrape_configs:
- job_name: otel-collector
  static_configs:
  - targets:
    - 'otelcol:8888'


# # my global config
# global:
#   scrape_interval: 30s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
#   evaluation_interval: 30s # Evaluate rules every 15 seconds. The default is every 1 minute.
#   # scrape_timeout is set to the global default (10s).
# storage:
#   tsdb:
#     out_of_order_time_window: 30m
# # Alertmanager configuration
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets:
#           # - alertmanager:9093

# # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
# rule_files:
#   # - "first_rules.yml"
#   # - "second_rules.yml"

# # A scrape configuration containing exactly one endpoint to scrape:
# # Here it's Prometheus itself.
# scrape_configs:
#   # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
#   - job_name: "otel-collector"

#     # metrics_path defaults to '/metrics'
#     # scheme defaults to 'http'.

#     static_configs:
#       - targets: ["localhost:8888"]

# remote_write:
#   - url: "http://host.containers.internal:9090/api/v1/write"

#     write_relabel_configs:
#       # drop specific metrics from remote-write
#     - source_labels: ['__name__']
#       regex: 'go_gc_.*'
#       action: 'drop'

#       # keep only specific labels for the kept metrics
#     - regex: '__name__|instance|job|version|branch'
#       action: 'labelkeep'